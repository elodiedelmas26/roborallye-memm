package code_serveur_client;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.EventListener;

public class Client1 implements Runnable{
	
	private Socket socket;
	private ObjectInputStream in;
	private ObjectOutputStream out;
	
	private static int id;
	private EventListener listener;
	private boolean running = false;
	
	public Client1(Socket socket2, int id2) {
		// TODO Auto-generated constructor stub
	}

	public void Connection(Socket socket, int id) {
		this.socket = socket;
		this.setId(id);
		
		try {
			out = new ObjectOutputStream(socket.getOutputStream());
			in = new ObjectInputStream(socket.getInputStream());
			listener = new Evenements();
		}catch(IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		try {
			running = true;
			
			while(running) {
				try {
					Object data = in.readObject();
					((Evenements) listener).received(data, this);
				}catch(ClassNotFoundException e) {
					e.printStackTrace();
				}
			}
		}catch(IOException e) {
			e.printStackTrace();
		}
	}
	
	public void close() {
		try {
			running = false;
			in.close();
			socket.close();
		}catch(IOException e) {
			e.printStackTrace();
		}
	}
	
	public void sendObject(Object objet) {
		try {
			out.writeObject(objet);
			out.flush();
		}catch(IOException e) {
			e.printStackTrace();
		}
	}

	public static int getId() {
		return id;
	}

	public void setId(int id) {
		Client1.id = id;
	}

}
